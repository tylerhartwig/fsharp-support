using System.Collections.Generic;
using static Module;

namespace ClassLibrary1
{
    public class Class1
    {
        public Class1()
        {
            R r = new R(foo: 123, bar: 123.0);

            int foo = r.Foo;
            double bar = r.Bar;

            r.|Foo|(0) = 123;
            r.Bar = 123;

            var o = new object();
            var c = EqualityComparer<R>.Default;

            string s = r.ToString();

            int hc1 = r.GetHashCode();
            int hc2 = r.GetHashCode(c);

            bool b1 = r.Equals(r);
            bool b2 = r.Equals(o);
            bool b3 = r.Equals(o, c);

            int ct1 = r.CompareTo(r);
            int ct2 = r.CompareTo(o);
            int ct3 = r.CompareTo(o, Comparer<R>.Default);

            var rError = new R|()|(1);
        }
    }
}

---------------------------------------------------------
(0): ReSharper Underlined Error Highlighting: The property 'Module.R.Foo' has no setter
(1): ReSharper Underlined Error Highlighting: Constructor 'R' has 2 parameter(s) but is invoked with 0 argument(s)
M:Module.R.#ctor(System.Int32,System.Double)
P:Module.R.Foo
P:Module.R.Bar
P:Module.R.Foo
P:Module.R.Bar
M:Module.R.ToString
M:Module.R.ToString
M:Module.R.GetHashCode
M:Module.R.GetHashCode
M:Module.R.GetHashCode(System.Collections.IEqualityComparer)
M:Module.R.GetHashCode(System.Collections.IEqualityComparer)
M:Module.R.Equals(Module.R)
M:Module.R.Equals(Module.R)
M:Module.R.Equals(System.Object)
M:Module.R.Equals(System.Object)
M:Module.R.Equals(System.Object,System.Collections.IEqualityComparer)
M:Module.R.Equals(System.Object,System.Collections.IEqualityComparer)
M:Module.R.CompareTo(Module.R)
M:Module.R.CompareTo(Module.R)
M:Module.R.CompareTo(System.Object)
M:Module.R.CompareTo(System.Object)
M:Module.R.CompareTo(System.Object,System.Collections.IComparer)
M:Module.R.CompareTo(System.Object,System.Collections.IComparer)
M:Module.R.#ctor(System.Int32,System.Double)

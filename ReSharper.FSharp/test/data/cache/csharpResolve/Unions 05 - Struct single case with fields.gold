using static Module;

namespace ClassLibrary1
{
    public class Class1
    {
        public Class1()
        {
            |U?|(0) uError = |U.NewCase(item: 123)|(1);
            SU? su = SU.NewCase(item: 123);

            SU u = su.Value;

            int t = u.Tag;
            int i = u.Item;

            bool isCaseError = u.|IsCase|(2);
            int tagsError = U.|Tags|(3).CaseA;
            U.|Case|(4) c = (U.|Case|(5)) u;
        }
    }
}

---------------------------------------------------------
(0): ReSharper Underlined Error Highlighting: Only non-nullable value type could be underlying of 'System.Nullable'
(1): ReSharper Underlined Error Highlighting: Cannot convert source type 'Module.U' to target type 'System.Nullable<Module.U>'
(2): ReSharper Error Highlighting: Cannot resolve symbol 'IsCase'
(3): ReSharper Error Highlighting: Cannot resolve symbol 'Tags'
(4): ReSharper Underlined Error Highlighting: Cannot access internal class 'Case' here
(5): ReSharper Underlined Error Highlighting: Cannot access internal class 'Case' here
M:Module.U.NewCase(System.Int32)
M:Module.U.NewCase(System.Int32)
M:Module.SU.NewCase(System.Int32)
M:Module.SU.NewCase(System.Int32)
P:Module.SU.Tag
P:Module.SU.Case.Item
